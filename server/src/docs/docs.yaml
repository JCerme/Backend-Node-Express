paths:
  /api/:
    get:
      summary: Get all the available products
      tags:
        - Products
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error
  /api/products/:
    get:
      summary: Get all the available products
      tags:
        - Products
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error
    post:
      summary: Create a new product
      tags:
        - Products
      responses:
        '200':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  '/api/products/{pid}':
    get:
      summary: Get a product by id
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: The product id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Error getting product
        '500':
          description: Internal Server Error
    put:
      summary: Update a product by id
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: The product id
          schema:
            type: string
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    delete:
      summary: Delete a product by id
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: The product id
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /api/mockingproducts:
    get:
      summary: Get hundreds of products for mocking
      tags:
        - Products
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error

  # CARTS
  /api/cart/:
    get:
      summary: Get the user's cart
      tags:
        - Cart
      responses:
        '200':
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '500':
          description: Internal Server Error
    post:
      summary: Add a product to the user's cart
      tags:
        - Cart
      responses:
        '200':
          description: Product added successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '500':
          description: Internal Server Error
  /api/cart/{cid}:
    get:
      summary: Get user cart by id
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: The cart id
          schema:
            type: string
      responses:
        '200':
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '500':
          description: Internal Server Error
    put:
      summary: Update a product from the user's cart
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: The cart id
          schema:
            type: string
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    delete:
      summary: Delete a product from the user's cart
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: The cart id
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /api/cart/product/{pid}:
    post:
      summary: Add a product to the user's cart
      tags:
        - Cart
      parameters:
        - name: pid
          in: path
          required: true
          description: The product id
          schema:
            type: string
      responses:
        '200':
          description: Product added successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '500':
          description: Internal Server Error
    put:
      summary: Update the product units from the user's cart
      tags:
        - Cart
      parameters:
        - name: pid
          in: path
          required: true
          description: The product id
          schema:
            type: string
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    delete:
      summary: Delete a product from the user's cart
      tags:
        - Cart
      parameters:
        - name: pid
          in: path
          required: true
          description: The product id
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

	# AUTH
  /api/logout:
    get:
      summary: Logout the user
      tags:
        - Auth
      responses:
        '200':
          description: User logged out successfully
        '500':
          description: Internal Server Error
  /api/account:
    get:
      summary: Get the user's account
      tags:
        - Account
      responses:
        '200':
          description: Account retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /api/sessions/current:
    get:
      summary: Get the current session
      tags:
        - Auth
      responses:
        '200':
          description: Session retrieved successfully
        '500':
          description: Internal Server Error
  /api/auth/error:
    get:
      summary: Get the error message
      tags:
        - Auth
  /api/auth/login:
    post:
      summary: Login the user
      tags:
        - Auth
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
  /api/auth/google:
    get:
      summary: Login with Google
      tags:
        - Auth
  /api/auth/googlecallback:
    get:
      summary: Callback for Google login
      tags:
        - Auth
  /api/auth/github:
    get:
      summary: Login with Github
      tags:
        - Auth
  /api/auth/githubcallback:
    get:
      summary: Callback for Github login
      tags:
        - Auth

	# ORDERS
  /api/checkout/:
    post:
      summary: Create a new order
      tags:
        - Orders
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Internal Server Error
    get:
      summary: Admin role can get all the user's orders
      tags:
        - Orders
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /api/checkout/{code}:
    get:
      summary: Get an order by code
      tags:
        - Orders
      parameters:
        - name: code
          in: path
          required: true
          description: The order code
          schema:
            type: string
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

	# LOGGER
  /api/logger:
    get:
      summary: Get a tests logger
      tags:
        - Logger
      responses:
        '200':
          description: Logger retrieved successfully
        '500':
          description: Internal Server Error

	# RESET PASSWORD
  /api/reset-password:
    post:
      summary: Send an email to reset the password
      tags:
        - Reset Password
  /api/update-password/{uid}/{code}:
    post:
      summary: Update the user's password
      tags:
        - Reset Password
      responses:
        '200':
          description: Password updated successfully
        '500':
          description: Internal Server Error
  /check-pwd-code/{uid}/{code}:
    post:
      summary: Check if the code is valid
      tags:
        - Reset Password
      responses:
        '200':
          description: Code is valid
        '500':
          description: Internal Server Error

	# CHAT
  /api/chat:
    get:
      summary: Get all the messages from the chat
      tags:
        - Chat
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '500':
          description: Internal Server Error

	# USERS
  /api/users/:
    get:
      summary: Get all the users
      tags:
        - Users
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal Server Error
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: The product ID (auto-generated)
        title:
          type: string
          description: The product title
        description:
          type: string
          description: The product description
        price:
          type: number
          description: The product price
        thumbnail:
          type: string
          description: The product thumbnail
        stock:
          type: number
          description: The product stock
      example:
        _id: 64bc46bfdb57c6d136327aa6
        code: BP001
        title: Model \#001
        description: If you are looking to live unforgettable moments sailing through the w…
        price: 350
        thumbnail: https://cdn.leonardo.ai/users/e1b24da5-638b-4c50-af03-b67f07688e68/gen…
        stock: 3
        category: yachts
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: The cart ID (auto-generated)
        products:
          type: array
          description: The products in the cart
          items:
            type: object
            properties:
              _id:
                type: ObjectId
                description: The product ID (auto-generated)
              product:
                type: ObjectId
                description: The product ID
              units:
                type: number
                description: The product units
      example:
        _id: 6512feac490fdebb5afdc8d5
        products: [
          [
            _id: 653309621016bb2778060ec1,
            product: 64bc46bfdb57c6d136327aa7,
            units: 2
          ],
          [
            _id: 653309621016bb2778060ec2,
            product: 64bc46bfdb57c6d136327aa8,
            units: 1
          ]
        ]
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: The user ID (auto-generated)
        first_name:
          type: string
          description: The user first name
        last_name:
          type: string
          description: The user last name
        email:
          type: string
          description: The user email
        password:
          type: string
          description: The user password
        role:
          type: string
          description: The user role
        cart:
          type: ObjectId
          description: The user cart
      example:
        _id: 652743f896c1bc186b605c8e
        first_name: santi
        last_name: santi
        email: santi@example.com
        password: $2b$10$...JZSmNPNZ...LwbHyyS
        role: user
        cart: 652743f796c1bc186b605c8c
    Order:
      type: object
      properties:
        _id:
          type: ObjectId
          description: The order ID (auto-generated)
        code:
          type: string
          description: The order code
        purchase_date:
          type: string
          description: The order purchase date
        amount:
          type: number
          description: The order amount
        purchaser:
          type: ObjectId
          description: The order purchaser
        products:
          type: array
          description: The order products
          items:
            type: object
            properties:
              _id:
                type: ObjectId
                description: The product ID (auto-generated)
              product:
                type: ObjectId
                description: The product ID
              units:
                type: number
                description: The product units
      example:
      _id: 652745a396c1bc186b605cac
      code: ecf666e92b
      purchase_date: 2023-10-12T01:02:25.604+00:00
      amount: 847
      purchaser: 652743f896c1bc186b605c8e
      products: [
        [
          _id: 64bc46bfdb57c6d136327aa6,
          product: 64bc46bfdb57c6d136327aa6,
          units: 2
        ]
      ]
    Message:
      type: object
      properties:
        _id:
          type: ObjectId
          description: The message ID (auto-generated)
        room:
          type: number
          description: The message room
        user:
          type: string
          description: The message user
        message:
          type: string
          description: The message message
        admin:
          type: boolean
          description: The message admin
        createdAt:
          type: string
          description: The message createdAt
        updatedAt:
          type: string
          description: The message updatedAt
      example:
        _id: 64c2c1b5ee259492ab28eea2
        room: 0
        user: Redforts
        message: Todo bien!
        admin: false
        createdAt: 2023-07-27T19:12:53.503+00:00
        updatedAt: 2023-07-27T19:12:53.503+00:00
